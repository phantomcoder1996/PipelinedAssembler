LDM R0, 6
LDM R1, 2
LDM R3, 9
LDM R2, 11
ADD R0, R1 --R1 now contains 8
setC
JC R1 
SUB R2,R1 --this instruction will not be executed
JN R2 --this jmp will not be taken
DEC R2 --R2 now contains 10
LDM R3,65535
MUL R3,R2 --R2 will contain  1111111111110101(-11) R3 0000000000001010(10)
LDM R4,20 
ADD R3,R4 --R4 = 29
STD R4,10 ADDRESS 10 C0NTAINS 29
PUSH R4
POP R5  --R5=29
STD R5,11 
MOV R0,R4 --R4=6
SHL R4,3,R4 	--R4=48
STD R4,122 
LDM R5,100
LDD R5,122 --R5=48
JMP R5
NOT R5 --R5=-25
RLC R5 --R5=-50 C=1
LDM R4,-5
LDM R0,-6
AND R0,R4 --R4=-4
STD R4,200
LDM R1,35
LDM R0, 16384
ADD R0,R0 -OV=1
NEG R1 R1=-35
NOP 
LDM R1,53
CALL R1  --R0=10
LDD R2,10 --R2=29
STD R2,300
LDD R3,300 --R3=R9
SHR R3,2,R2 --R2=7
NEG R2 --R2=-7
RRC R2 --R2=32764 --C=1
CLRC --C=0
LDM R2,66
LDM R4,0
MOV R4,R0
JZ R2
LDM R5,24
LDM R0,50
DEC R3 
JN R0 
JZ R5 --GOES TO NOT INST
PUSH R2
PUSH R4
PUSH R1
LDM R2,-10
LDM R4,
LDM R0,0
LDM R1,5
ADD R1,R0
JN R4
POP R1
POP R4
POP R2
RET
IN R5
OR R5,R1
ADD R1,R3
DEC R1
SUB R1,R3
OUT R3
IN R1
PUSH R1
LDM R4,75
NOP
JMP R4



